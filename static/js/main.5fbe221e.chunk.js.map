{"version":3,"sources":["features/stock/stockSlice.ts","app/hooks.ts","features/actions/actionsSlice.ts","components/Card.tsx","components/Loader.tsx","components/CardsList.tsx","App.tsx","app/store.ts","index.tsx"],"names":["stockSlice","createSlice","name","initialState","pictures","isLoading","error","reducers","picsFetching","state","picsFetchingSuccess","action","payload","picsFetchingError","actions","selectPictures","stock","selectLoading","selectError","useAppDispatch","useDispatch","useAppSelector","useSelector","actionsSlice","likes","hide","setLike","includes","push","removeLike","splice","indexOf","setHide","showAllHide","length","selectLikes","selectHide","Card","item","dispatch","allLikes","allHides","useState","id","like","useEffect","className","style","marginBottom","src","portrait","alt","photographer","cn","onClick","prev","right","Loader","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","transform","attributeName","type","repeatCount","values","keyTimes","dur","fillOpacity","fill","d","CardsList","filterByLike","setFilterByLike","handleFilterByLike","useCallback","marginLeft","map","picture","App","source","axios","CancelToken","fetchPics","a","get","headers","Authorization","cancelToken","token","data","photos","cancel","padding","combineReducers","stockReducer","actionsReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5fbe221e.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport type { RootState } from '../../app/store'\r\nimport { IPicture } from '../../types/types'\r\n\r\ninterface StockState {\r\n  pictures: IPicture[] | []\r\n  isLoading: boolean,\r\n  error: string\r\n}\r\n\r\nconst initialState: StockState = {\r\n  pictures: [],\r\n  isLoading: false,\r\n  error: ''\r\n}\r\n\r\nexport const stockSlice = createSlice({\r\n  name: 'stock',\r\n  initialState,\r\n  reducers: {\r\n    picsFetching: state => {\r\n      state.isLoading = true\r\n    },\r\n    picsFetchingSuccess: (state, action: PayloadAction<IPicture[]>) => {\r\n      state.isLoading = false\r\n      state.error = ''\r\n      state.pictures = action.payload\r\n    },\r\n    picsFetchingError: (state, action: PayloadAction<string>) => {\r\n      state.isLoading = false\r\n      state.error = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const { picsFetching, picsFetchingSuccess, picsFetchingError } = stockSlice.actions\r\n\r\nexport const selectPictures = (state: RootState) => state.stock.pictures\r\nexport const selectLoading = (state: RootState) => state.stock.isLoading\r\nexport const selectError = (state: RootState) => state.stock.error\r\n\r\nexport default stockSlice.reducer\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport type { RootState } from '../../app/store'\r\n\r\ninterface ActionsState {\r\n  likes: number[]\r\n  hide: number[]\r\n}\r\n\r\nconst initialState: ActionsState = {\r\n  likes: [],\r\n  hide: []\r\n}\r\n\r\nexport const actionsSlice = createSlice({\r\n  name: 'actions',\r\n  initialState,\r\n  reducers: {\r\n    setLike: (state, action: PayloadAction<number>) => {\r\n      if (!state.likes.includes(action.payload)) {\r\n        state.likes.push(action.payload)\r\n      }\r\n    },\r\n    removeLike: (state, action: PayloadAction<number>) => {\r\n      if (state.likes.includes(action.payload)) {\r\n        state.likes.splice(state.likes.indexOf(action.payload), 1)\r\n      }\r\n    },\r\n    setHide: (state, action: PayloadAction<number>) => {\r\n      if (!state.hide.includes(action.payload)) {\r\n        state.hide.push(action.payload) \r\n      }\r\n    },\r\n    showAllHide: (state) => {\r\n      state.hide.length = 0\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setLike, removeLike, setHide, showAllHide } = actionsSlice.actions\r\n\r\nexport const selectLikes = (state: RootState) => state.actions.likes\r\nexport const selectHide = (state: RootState) => state.actions.hide\r\n\r\nexport default actionsSlice.reducer\r\n","import React, { useState, useEffect } from 'react'\r\nimport cn from 'classnames'\r\nimport { IPicture } from '../types/types'\r\n\r\nimport { useAppSelector, useAppDispatch } from '../app/hooks'\r\nimport { actionsSlice, selectLikes, selectHide } from '../features/actions/actionsSlice'\r\n\r\ninterface CardProps {\r\n  item: IPicture\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({ item }) => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const allLikes: number[] = useAppSelector(selectLikes)\r\n  const allHides: number[] = useAppSelector(selectHide)\r\n\r\n  const [like, setLike] = useState<boolean>(allLikes.includes(item.id))\r\n  const [hide, setHide] = useState<boolean>(allHides.includes(item.id))\r\n  \r\n  const handleLike = () => {\r\n    if (like) {\r\n      dispatch(actionsSlice.actions.removeLike(item.id))\r\n    } else {\r\n      dispatch(actionsSlice.actions.setLike(item.id))\r\n    }\r\n    setLike(prev => !prev)\r\n  }\r\n\r\n  const hideCard = () => {\r\n    dispatch(actionsSlice.actions.setHide(item.id))\r\n    setHide(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setHide(allHides.includes(item.id))\r\n  }, [allHides, item])\r\n\r\n  if (hide) return <></>\r\n\r\n  return (\r\n    <div className='col s12 m6 l4' style={{ marginBottom: '30px' }}>\r\n      <div className='card'>\r\n        <div className='card-image'>\r\n          <img src={item.src.portrait} alt='Preview' />\r\n          <span className='card-title'>{item.photographer}</span>\r\n          <button\r\n            className={cn('btn-floating halfway-fab red', { 'lighten-3': !like })}\r\n            onClick={handleLike}\r\n            style={{ right: '75px' }}\r\n          >\r\n            <i className='material-icons'>favorite</i>\r\n          </button>\r\n          <button className={cn('btn-floating halfway-fab black')} onClick={hideCard}>\r\n            <i className='material-icons'>close</i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\n\r\nconst Loader: React.FC = () => {\r\n  return (\r\n    <svg\r\n      style={{ margin: 'auto', background: 'rgb(255, 255, 255)', display: 'block', shapeRendering: 'auto' }}\r\n      width='200px'\r\n      height='200px'\r\n      viewBox='0 0 100 100'\r\n      preserveAspectRatio='xMidYMid'\r\n    >\r\n      <g transform='translate(50 50)'>\r\n        <g transform='scale(1)'>\r\n          <g transform='translate(-50 -50)'>\r\n            <g>\r\n              <animateTransform\r\n                attributeName='transform'\r\n                type='rotate'\r\n                repeatCount='indefinite'\r\n                values='0 50 50;360 50 50'\r\n                keyTimes='0;1'\r\n                dur='0.7575757575757576s'\r\n              ></animateTransform>\r\n              <path fillOpacity='1' fill='#85a2b6' d='M50 50L50 0A50 50 0 0 1 100 50Z'></path>\r\n            </g>\r\n            <g>\r\n              <animateTransform\r\n                attributeName='transform'\r\n                type='rotate'\r\n                repeatCount='indefinite'\r\n                values='0 50 50;360 50 50'\r\n                keyTimes='0;1'\r\n                dur='1.0101010101010102s'\r\n              ></animateTransform>\r\n              <path fillOpacity='1' fill='#bbcedd' d='M50 50L50 0A50 50 0 0 1 100 50Z' transform='rotate(90 50 50)'></path>\r\n            </g>\r\n            <g>\r\n              <animateTransform\r\n                attributeName='transform'\r\n                type='rotate'\r\n                repeatCount='indefinite'\r\n                values='0 50 50;360 50 50'\r\n                keyTimes='0;1'\r\n                dur='1.5151515151515151s'\r\n              ></animateTransform>\r\n              <path fillOpacity='1' fill='#dce4eb' d='M50 50L50 0A50 50 0 0 1 100 50Z' transform='rotate(180 50 50)'></path>\r\n            </g>\r\n            <g>\r\n              <animateTransform\r\n                attributeName='transform'\r\n                type='rotate'\r\n                repeatCount='indefinite'\r\n                values='0 50 50;360 50 50'\r\n                keyTimes='0;1'\r\n                dur='3.0303030303030303s'\r\n              ></animateTransform>\r\n              <path fillOpacity='1' fill='#fdfdfd' d='M50 50L50 0A50 50 0 0 1 100 50Z' transform='rotate(270 50 50)'></path>\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useState, useCallback } from 'react'\r\n\r\nimport { IPicture } from '../types/types'\r\n\r\nimport { useAppSelector, useAppDispatch } from '../app/hooks'\r\nimport { selectLikes } from '../features/actions/actionsSlice'\r\nimport { selectPictures, selectLoading, selectError } from '../features/stock/stockSlice'\r\nimport { actionsSlice } from '../features/actions/actionsSlice'\r\n\r\nimport Card from './Card'\r\nimport Loader from './Loader'\r\n\r\nconst CardsList: React.FC = () => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const allLikes: number[] = useAppSelector(selectLikes)\r\n  const pictures: IPicture[] = useAppSelector(selectPictures)\r\n  const isLoading: boolean = useAppSelector(selectLoading)\r\n  const error: string = useAppSelector(selectError)\r\n\r\n  const [filterByLike, setFilterByLike] = useState<boolean>(false)\r\n  const handleFilterByLike = useCallback(() => setFilterByLike(prev => !prev), [])\r\n\r\n  const showAllHide = () => dispatch(actionsSlice.actions.showAllHide())\r\n\r\n  if (isLoading) return <Loader />\r\n\r\n  if (error) return <p>{error}</p>\r\n\r\n  if (!pictures.length) return <p>Уупс, кажется, здесь ничего нет...</p>\r\n\r\n  return (\r\n    <div className='row'>\r\n      <>\r\n        <div className='filters'>\r\n          <button\r\n            className='waves-effect waves-light btn'\r\n            onClick={handleFilterByLike}\r\n            style={{ marginBottom: '20px', marginLeft: '0.75rem' }}\r\n          >\r\n            Сортировка по лайкам\r\n          </button>\r\n          <button\r\n            className='waves-effect waves-light btn'\r\n            onClick={showAllHide}\r\n            style={{ marginBottom: '20px', marginLeft: '0.75rem' }}\r\n          >\r\n            Вернуть все закрытые карточки\r\n          </button>\r\n        </div>\r\n\r\n        {filterByLike &&\r\n          pictures.map((picture: IPicture) => allLikes.includes(picture.id) && <Card item={picture} key={picture.id} />)}\r\n\r\n        {!filterByLike && pictures.map((picture: IPicture) => <Card item={picture} key={picture.id} />)}\r\n      </>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardsList\r\n","import React, { useEffect } from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { stockSlice } from './features/stock/stockSlice'\r\nimport { useAppDispatch } from './app/hooks'\r\n\r\nimport CardsList from './components/CardsList'\r\n\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\n\r\nfunction App() {\r\n  const API = 'https://api.pexels.com/v1/curated'\r\n  const TOKEN = '563492ad6f91700001000001ecf0d3af92a541458c09c1d48706968e'\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    const CancelToken = axios.CancelToken\r\n    const source = CancelToken.source()\r\n\r\n    const fetchPics = async () => {\r\n      try {\r\n        dispatch(stockSlice.actions.picsFetching())\r\n\r\n        const { data } = await axios.get(API, { headers: { Authorization: TOKEN }, cancelToken: source.token })\r\n\r\n        dispatch(stockSlice.actions.picsFetchingSuccess(data.photos))\r\n      } catch (error) {\r\n        dispatch(stockSlice.actions.picsFetchingError('Error'))\r\n      }\r\n    }\r\n\r\n    fetchPics()\r\n\r\n    return () => {\r\n      source.cancel('Operation canceled.')\r\n      dispatch(stockSlice.actions.picsFetchingError('Operation canceled.'))\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className='App' style={{padding: '30px 0'}}>\r\n      <div className='container'>\r\n        <CardsList />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\r\nimport { combineReducers } from 'redux'\r\nimport { persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport stockReducer from '../features/stock/stockSlice'\r\nimport actionsReducer from '../features/actions/actionsSlice'\r\n\r\nconst reducers = combineReducers({\r\n  stock: stockReducer,\r\n  actions: actionsReducer\r\n})\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['stock']\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n  })\r\n})\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nimport { store } from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport { persistStore } from 'redux-persist'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nlet persistor = persistStore(store)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}